{"version":3,"sources":["assets/icon.png","src/components/NavBar.tsx","src/components/Footer.tsx","src/components/JsonldUploader.tsx","src/components/RenderObjectForm.tsx","src/pages/JsonldWizard.tsx","src/pages/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/json-ld-editor-react/json-ld-editor-react/App.css?c420","App.css"],"names":["module","exports","useStyles","makeStyles","theme","solidButton","backgroundColor","palette","primary","main","color","borderRadius","padding","dark","cursor","menuButton","common","white","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","Button","target","href","darkLink","light","whiteLink","footer","spacing","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","link","secondary","input","background","fontSize","fontFamily","settingsForm","marginBottom","saveButton","margin","fullWidth","JsonldUploader","renderObject","onChange","useTheme","React","useState","show_info_card","json_error_open","json_loaded_open","upload_jsonld","JSON","stringify","state","setState","stateRef","useRef","updateState","useCallback","update","current","Card","CardHeader","action","IconButton","onClick","name","aria-expanded","aria-label","subheader","Collapse","in","timeout","unmountOnExit","CardContent","rel","List","ListItem","ListItemAvatar","Avatar","ListItemText","onSubmit","event","preventDefault","parse","e","console","log","FormControl","TextField","id","label","placeholder","value","required","multiline","size","InputProps","InputLabelProps","type","startIcon","Snackbar","open","onClose","autoHideDuration","elevation","severity","editButtons","marginLeft","autocomplete","formInput","biggerFont","alignLeft","paperPadding","paperTitle","fontWeight","renameKey","object","old_key","new_key","Object","defineProperty","getOwnPropertyDescriptor","RenderObjectForm","props","ontologyObject","fullJsonld","editEnabled","parentProperty","autocompleteOntologyOptions","errorMessage","handleTextFieldChange","startsWith","includes","handleAddEntry","property","push","length","handleAddProperty","getConceptSearchDescription","concept","search_description","handleAutocompleteOntologyOptions","inputText","innerText","conceptsArray","ontologyGraph","Array","isArray","filter","toLowerCase","indexOf","keys","map","graphLabel","concat","sort","a","b","key","Grid","container","item","xs","subSelections","newObject","el","handleRemoveProperty","disabled","md","Autocomplete","defaultValue","options","onInputChange","onSelect","newInputValue","getOptionSelected","option","selectedValue","getOptionLabel","groupBy","renderInput","params","jsonld_properties","newProperty","error","helperText","Chip","handleRecursiveChange","parentType","addEntryButton","smallerFont","JsonldWizard","location","useLocation","dialogOpen","wizard_jsonld","csvwColumnsArray","jsonld_uri_provided","ontology_loaded","ontology_jsonld","edit_enabled","ontoload_error_open","ontoload_success_open","sparql_endpoint","sparql_username","sparql_password","useEffect","URLSearchParams","search","hash","get","downloadOntology","ontologiesList","contextUrl","replace","axios","defaults","headers","then","res","data","toJSONLD","jsonld_rdf","catch","uri","rdf_format","endsWith","Promise","resolve","reject","store","$rdf","graph","doc","sym","serialize","err","jsonldData","LoggedIn","Value","Select","MenuItem","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","normalFont","About","project_license","language_autocomplete","createMuiTheme","blue","typography","App","basename","View","exact","path","component","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","i","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.eee7e2d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.01851ec5.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport { AppBar, Toolbar, Button, Tooltip } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport { AuthButton } from '@solid/react';\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='JSON-LD Editor 🧙‍♂️'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        {/* <Link to=\"/wizard\" className={classes.linkButton}>\n          <Tooltip title='Start metadata wizard'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n\n        {/* <AuthButton login='Login with SOLID' logout='Logout from SOLID' className={classes.solidButton}\n          popup=\"https://inrupt.net/common/popup.html\"/> */}\n        <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link>\n        {/* <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Tooltip title='Go to https://github.com/vemonet/json-ld-editor-react '>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/vemonet/json-ld-editor-react \">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\"\n            href=\"https://github.com/vemonet/json-ld-editor-react/blob/master/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { IconButton, Typography, Button, FormControl, TextField, CircularProgress, Card, CardContent, CardHeader, Collapse, Snackbar,  List, ListItem, ListItemAvatar, Avatar, ListItemText } from \"@material-ui/core\";\nimport UploadIcon from '@material-ui/icons/CloudUpload';\nimport EditParamIcon from '@material-ui/icons/Link';\nimport LockFormParamIcon from '@material-ui/icons/Lock';\nimport WizardQuestionsIcon from '@material-ui/icons/LiveHelp';\n// QuestionAnswer\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  input: {\n    background: 'white',\n    fontSize: '11px',\n    fontFamily: 'monospace'\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n}))\n\n\nexport default function JsonldUploader({ renderObject, onChange }: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n  \n  const [state, setState] = React.useState({\n    show_info_card: false,\n    json_error_open: false,\n    json_loaded_open: false,\n    upload_jsonld: JSON.stringify(renderObject, null, 4)\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ upload_jsonld: event.target.value})\n  }\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      // Call onChange function given by parent\n      onChange(JSON.parse(state.upload_jsonld)) \n      updateState({...state, json_loaded_open: true})\n    } catch (e) {\n      console.log(\"Invalid JSON-LD\");\n      updateState({...state, json_error_open: true})\n    }\n  }\n\n  // Close Snackbar\n  const closeJsonError = () => {\n    updateState({...state, json_error_open: false})\n  };\n  const closeJsonLoaded = () => {\n    updateState({...state, json_loaded_open: false})\n  };\n\n  return(\n    <Card style={{margin: theme.spacing(4,0)}}>\n        <CardHeader\n          style={{ textAlign: 'center'}}\n          action={\n            <IconButton style={{fontSize: '16px'}}\n              onClick={() => { updateState({ show_info_card: !state.show_info_card}) }}\n              name='show_info_card'\n              aria-expanded={state.show_info_card}\n              aria-label=\"show about\"\n            >\n              Import&nbsp;\n              {!state.show_info_card &&\n                <ExpandMoreIcon />\n              }\n              {state.show_info_card &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          }\n          title=\"Import your JSON-LD\"\n          subheader={\"Paste your JSON-LD file content in the box, and start to edit it easily.\"}\n        />\n\n\n        <Collapse in={state.show_info_card} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              All <code>@type</code> values and properties <b>autocompletes are based on the classes and properties described in the ontology loaded</b>.\n            </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}>\n              The main <code>@context</code> URL is used to automatically download the related ontology as JSON-LD, using Content-Negociation (with accept <code>application/ld+json</code>). \n            {/* </Typography>\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(1)}}> */}\n              &nbsp;This feature has been tested with the <a href=\"https://schema.org\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Schema.org vocabulary</a> \n              , the <a href=\"http://www.w3.org/ns/csvw\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">CSVW ontology</a>\n              , the <a href=\"https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SemanticScience ontology</a>\n              , and the <a href=\"https://raw.githubusercontent.com/biolink/biolink-model/master/biolink-model.ttl\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">BioLink model</a>\n            </Typography>\n            {/* <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(2)}}>\n              Provide a URL to download your ontology as JSON-LD in the main <code>@context</code>, and feel free to <a href=\"https://github.com/vemonet/json-ld-editor-react/issues\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">create an issue</a> on GitHub if the autocomplete does not work.\n            </Typography> */}\n\n            <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(0)}}>\n              A few other features are available:\n            </Typography>\n            <List style={{marginTop: theme.spacing(0), marginBottom: theme.spacing(1)}}>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <WizardQuestionsIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b>Provide human-readable questions</b> for each property to fill with the <code>@wizardQuestions</code> special property, refer to the default JSON-LD to use it.\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <EditParamIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b>Provide the URL of the JSON-LD to edit</b> with the <code>edit=http://myjsonld</code> URL parameter, convenient to send the right form to a collaborator, e.g. <a href=\"https://vemonet.github.io/json-ld-editor-react?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json\" className={classes.link}>https://vemonet.github.io/json-ld-editor-react?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json</a>\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <LockFormParamIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b>Lock the form</b> with the <code>toysrus=closed</code> URL parameter, to insure your users can't play around, and can only change the property values in the provided structure, e.g. <a href=\"https://vemonet.github.io/json-ld-editor-react?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json&toysrus=closed\" className={classes.link}>https://vemonet.github.io/json-ld-editor-react?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json&toysrus=closed</a>\n                </ListItemText>\n              </ListItem>\n            </List>\n            {/* <Typography variant=\"body1\" style={{textAlign: 'left', marginBottom: theme.spacing(3)}}>\n              You can also provide the JSON-LD file URL directly via the <code>?edit=</code> parameter in the URL to send the right form to fill to a collaborator, e.g. <a href=\"https://vemonet.github.io/json-ld-editor-react?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json\" className={classes.link}>https://vemonet.github.io/json-ld-editor-react/?edit=https://raw.githubusercontent.com/w3c/csvw/gh-pages/tests%2Ftest086-metadata.json</a>\n            </Typography> */}\n\n            <form onSubmit={handleSubmit}>\n              <FormControl className={classes.settingsForm}>\n\n                <TextField\n                  id='uploadJsonldInput'\n                  label='JSON-LD to upload'\n                  placeholder='JSON-LD to upload'\n                  value={state.upload_jsonld}\n                  required\n                  multiline\n                  className={classes.fullWidth}\n                  variant=\"outlined\"\n                  onChange={handleChange}\n                  size='small'\n                  InputProps={{\n                    className: classes.input\n                  }}\n                  InputLabelProps={{ required: false }}\n                />\n\n                <div style={{width: '100%', textAlign: 'center'}}>\n                  <Button type=\"submit\" \n                    variant=\"contained\" \n                    className={classes.saveButton} \n                    startIcon={<UploadIcon />}\n                    color=\"secondary\" >\n                      Upload your JSON-LD\n                  </Button>\n                </div>\n                <Snackbar open={state.json_error_open} onClose={closeJsonError} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n                    The JSON-LD provided is not valid ❌️\n                  </MuiAlert>\n                </Snackbar>\n                <Snackbar open={state.json_loaded_open} onClose={closeJsonLoaded} autoHideDuration={10000}>\n                  <MuiAlert elevation={6} variant=\"filled\" severity=\"info\">\n                    Your JSON-LD has been loaded. Trying to load the ontology from the URL provided in @context...\n                  </MuiAlert>\n                </Snackbar>\n              </FormControl>\n            </form>\n\n          </CardContent>\n        </Collapse>\n      </Card>\n  )\n}\n\n// https://raw.githubusercontent.com/biolink/biolink-model/master/biolink-model.ttl\n\n// https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl\n\nconst csvw_jsonld = {\n  \"@context\": \"http://www.w3.org/ns/csvw\",\n  \"url\": \"tree-ops.csv\",\n  \"tableSchema\": {\n    \"columns\": [{\n      \"@type\": \"Schema\",\n      \"name\": \"GID\",\n      \"titles\": \"GID\"\n    }, {\n      \"name\": \"on_street\",\n      \"titles\": \"On Street\"\n    }, {\n      \"name\": \"species\",\n      \"titles\": \"Species\"\n    }, {\n      \"name\": \"trim_cycle\",\n      \"titles\": \"Trim Cycle\"\n    }, {\n      \"name\": \"inventory_date\",\n      \"titles\": \"Inventory Date\",\n      \"datatype\": {\"base\": \"date\", \"format\": \"M/d/yyyy\"}\n    }]\n  }\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Button, Card, Chip, Grid, Snackbar, Box, IconButton, TextField, Tooltip } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Delete';\nimport AddObjectPropertyIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport AddDataPropertyIcon from '@material-ui/icons/PlaylistAdd';\nimport AddObjectArrayIcon from '@material-ui/icons/AccountTree';\nimport AddDataArrayIcon from '@material-ui/icons/PostAdd';\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    // color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  editButtons: {\n    textTransform: 'none',\n    marginLeft: theme.spacing(2),\n    // marginTop: theme.spacing(2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  autocomplete: {\n    marginRight: theme.spacing(2)\n  },\n  formInput: {\n    background: 'white',\n    width: '100%'\n  },\n  biggerFont: {\n    fontSize: '14px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n    width: '100%'\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\nconst renameKey = (object: any, old_key: any, new_key: any): any => {\n  if (old_key !== new_key) {\n    // @ts-ignore\n    Object.defineProperty(object, new_key, Object.getOwnPropertyDescriptor(object, old_key));\n    delete object[old_key];\n  }\n  return object\n};\n\nexport default function RenderObjectForm(props: any) {\n  // Recursive component to display a JSON-LD object as form\n  const renderObject = props.renderObject;\n  const onChange = props.onChange;\n  const ontologyObject = props.ontologyObject;\n  const fullJsonld = props.fullJsonld;\n  const editEnabled = props.editEnabled;\n  const parentProperty = props.parentProperty;\n  // const parentType = props.parentType;\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const [state, setState] = React.useState({\n    autocompleteOntologyOptions: [],\n    errorMessage: ''\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const handleTextFieldChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (renderObject['@type'] === 'URL' && event.target.id === '@value') {\n      // URL validation\n      if ((!event.target.value.startsWith('http://') && !event.target.value.startsWith('https://')) || event.target.value.includes(' ')) {\n        updateState({ errorMessage: 'Provide a valid URL'})\n      } else {\n        updateState({ errorMessage: ''})\n        renderObject[event.target.id] = event.target.value\n      }\n\n    } else {\n      renderObject[event.target.id] = event.target.value\n    }\n    // call onChange function given by parent\n    onChange(renderObject) \n  }\n  const handleRecursiveChange = (property: any, subSelections: any) => {\n    renderObject[property] = subSelections;\n    onChange(renderObject);\n  }\n  \n  const handleAddEntry = (property: any, event: any) => {\n    if (typeof renderObject[property][0] === 'string') {\n      // If the array entries are strings and not objects\n      renderObject[property].push(property + ' ' + renderObject[property].length);\n    } else if (renderObject[property].length > 0) {\n      // Use {...object} to clone the object\n      renderObject[property].push({...renderObject[property][0]});\n    }\n    onChange(renderObject);\n  }\n  // const handleRemoveEntry = (property: any, event: any) => {\n  //   console.log(property);\n  //   renderObject.splice(property, 1);\n  //   onChange(renderObject);\n  // }\n  const handleAddProperty = (property: any, event: any) => {\n    // if (typeof renderObject[property][0] === 'string') {\n    //   // If the array entries are strings and not objects\n    //   renderObject[property].push(property + ' ' + renderObject[property].length);\n    // } else if (renderObject[property].length > 0) {\n    //   // Use {...object} to clone the object\n    //   renderObject[property].push({...renderObject[property][0]});\n    // }\n    if (property === 'objectProperty') {\n      renderObject['property'] = {\n        '@type': 'Object Type',\n        'property': 'value',\n      }\n    } else if (property === 'objectArray') {\n      renderObject['property'] = [{\n        '@type': 'Object Type',\n        'property': 'value',\n      }]\n    } else if (property === 'dataArray') {\n      renderObject['property'] = [\n        'value',\n      ]\n    } else {\n      renderObject['property'] = 'value'\n    }\n    onChange(renderObject);\n  }\n  const handleRemoveProperty = (property: any, event: any): any => {\n    delete renderObject[property];\n    let newObject = renderObject;\n    if (Array.isArray(renderObject)) {\n      // Properly remove null from array that we deleted\n      newObject = renderObject.filter(function (el: any) {\n        return el != null;\n      });\n    }\n    onChange(newObject);\n  }\n\n  function getConceptSearchDescription(concept: any) {\n    // ADD ONTOLOGY: Here to add exceptions when handling concepts labels\n    // TODO: improve resolution of labels, quick hack to work with schema.org and csvw\n    let search_description = ''\n    if (concept['rdfs:label']) {\n      if (typeof concept['rdfs:label'] === 'string') search_description = search_description + concept['rdfs:label'];\n      if (concept['rdfs:label']['en']) search_description = search_description + concept['rdfs:label']['en'];\n    }\n    if (concept['rdfs:comment']) {\n      if (typeof concept['rdfs:comment'] === 'string') search_description = search_description + concept['rdfs:comment'];\n      if (concept['rdfs:comment']['en']) search_description = search_description + concept['rdfs:comment']['en'];\n    }\n    if (concept['http://www.w3.org/2000/01/rdf-schema#label']) {\n      if (typeof concept['http://www.w3.org/2000/01/rdf-schema#label'] === 'string') search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'];\n      if (concept['http://www.w3.org/2000/01/rdf-schema#label'][0] && concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) search_description = search_description + concept['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'];\n    }\n    if (concept['http://www.w3.org/2004/02/skos/core#definition']) {\n      if (typeof concept['http://www.w3.org/2004/02/skos/core#definition'] === 'string') search_description = search_description + concept['http://www.w3.org/2004/02/skos/core#definition'];\n      if (concept['http://www.w3.org/2004/02/skos/core#definition'][0] && concept['http://www.w3.org/2004/02/skos/core#definition'][0]['@value']) search_description = search_description + concept['http://www.w3.org/2004/02/skos/core#definition'][0]['@value'];\n    }\n    return search_description;\n  }\n\n  // TODO: Delay search:\n  // StackOverflow: https://stackoverflow.com/questions/23123138/perform-debounce-in-react-js\n  // Code example: https://github.com/slorber/react-async-hook/blob/master/example/index.tsx\n  // OR: const WAIT_INTERVAL = 500\n  // let timerID: any\n  // clearTimeout(timerID)\n  //   timerID = setTimeout(() => {\n  //     console.log('some action after delay autocomplete')\n  //   })\n  function handleAutocompleteOntologyOptions(event: any) {\n    // Get autocomplete options from searching the provided @context ontology JSON-LD\n    let inputText = '';\n    if (event && event.target){\n      if (event.target.value && event.target.value !== 0) {\n        inputText = event.target.value;\n      } else {\n        inputText = event.target.innerText;\n      }\n    }\n    if (inputText) {\n      // Search for matching concepts in the ontology JSON-LD\n      let conceptsArray: any = []\n      const ontologyGraph = ontologyObject['@graph']\n      if (Array.isArray(ontologyGraph)) {\n        // If @graph is array of entities (e.g. schema.org)\n        conceptsArray = ontologyGraph\n          .filter((concept: any) => {\n            return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n          })\n      } else {\n        // If @graph is object of arrays of entities (e.g. csvw)\n        Object.keys(ontologyGraph).map((graphLabel: any) => {\n          if (ontologyGraph[graphLabel] && Array.isArray(ontologyGraph[graphLabel])) {\n            conceptsArray = conceptsArray.concat(ontologyGraph[graphLabel]\n              .filter((concept: any) => {\n                return getConceptSearchDescription(concept).toLowerCase().indexOf( inputText.toLowerCase() ) !== -1\n              })\n            )\n          }\n        })\n      }\n      updateState({\n        autocompleteOntologyOptions: conceptsArray.sort((a: any, b: any) => {\n          if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n            // Handle when array of types provided (e.g. SIO via rdflib)\n            return a['@type'][0] < b['@type'][0] ? 1 : -1\n          } else {\n            return a['@type'] < b['@type'] ? 1 : -1\n          }\n        })\n      })\n    }\n  }\n\n  // https://betterprogramming.pub/recursive-rendering-with-react-components-10fa07c45456\n  return (\n    <div>\n      {Object.keys(renderObject).map((property: any, key: number) => (\n        <div key={key}>\n          {/* Ignore all properties starting by @wizard */}\n          {!property.startsWith('@wizard') &&\n            <>\n              {/* <Box display=\"flex\"> */}\n              <Grid container>\n                { fullJsonld['@wizardQuestions'] && fullJsonld['@wizardQuestions'][property] &&\n                  // Display the @wizardQuestions if provided for this property\n                  <Grid item xs={12}>\n                    <Typography variant=\"body1\" style={{fontWeight: 900, textAlign: 'left', marginTop: theme.spacing(1), marginLeft: theme.spacing(2)}}>\n                      {fullJsonld['@wizardQuestions'][property]}\n                    </Typography>\n                  </Grid>\n                }\n                {property !== '@context' && (editEnabled || Array.isArray(renderObject)) &&\n                  // Button to delete any property object. Hide for objects if edit disabled\n                  <Grid item>\n                    {/* <Tooltip title='Delete the property {} and its child objects'> */}\n                    <Tooltip title={<Typography style={{textAlign: 'center'}}>Delete the <code>{property}</code> property<br/>and its children</Typography>}>\n                      <IconButton onClick={(subSelections: any) => handleRemoveProperty(property, subSelections)}\n                        style={{ margin: theme.spacing(1,1) }}\n                        className={classes.editButtons} \n                        disabled={property === '0' || property === '@type'}\n                        color=\"default\" >\n                          <RemoveIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Grid>\n                }\n                {property === '@type' &&\n                  <Grid item xs={11} md={9}>\n                    {/* Autocomplete for @types */}\n                    <Autocomplete\n                      key={property + key}\n                      id={property}\n                      disabled={!editEnabled}\n                      // value={ { ['rdfs:label']: renderObject[property]}}\n                      defaultValue={{'rdfs:label': renderObject[property]}}\n                      options={state.autocompleteOntologyOptions}\n                      onInputChange={handleAutocompleteOntologyOptions}\n                      onSelect={handleAutocompleteOntologyOptions}\n\n                      // ADD ONTOLOGY: fix how the entity id/label is retrieved here (main outcome of the input)\n                      onChange={(event, newInputValue: any) => {\n                        if (newInputValue) {\n                          if (newInputValue['rdfs:label']) {\n                            // TODO: improve, make it more generic after normalizing JSON-LD?\n                            if (newInputValue['rdfs:label']['en']) {\n                              // Handle CSVW label with lang\n                              renderObject[property] = newInputValue['rdfs:label']['en']\n                            } else {\n                              renderObject[property] = newInputValue['rdfs:label']\n                            }\n                          } else if(newInputValue['@id']) {\n                            // This is more semantically accurate but it imports the whole concept object\n                            // We could use the @id URI\n                            renderObject[property] = newInputValue['@id']\n                          } else {\n                            // This is more semantically accurate but it imports the whole concept object\n                            // We could use the @id URI\n                            renderObject[property] = newInputValue\n                          }\n                          onChange(renderObject)\n                        }\n                      }}\n                      getOptionSelected={(option: any, selectedValue: any): any => {\n                        // Handle option label when provided with rdfs:label or direct\n                        try {\n                          if (option['rdfs:label']) {\n                            if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                            if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                          }\n                          if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] && selectedValue['http://www.w3.org/2000/01/rdf-schema#label']) {\n                            return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                          }\n                          if (option['@id']) {\n                            return option['@id'] === selectedValue['@id']\n                          }\n                          return option === selectedValue\n                        } catch (e) {\n                          return option === selectedValue\n                        }\n                      }}\n                      getOptionLabel={(option: any): any => {\n                        // Handle option label when provided with rdfs:label or direct\n                        if (option['rdfs:label']) {\n                          if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                          if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                        }\n                        if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                          return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                        }\n                        if (option['@id']) {\n                          return option['@id']\n                        }\n                        return option\n                      }}\n                      groupBy={(option: any): any => {\n                        if (option['@type'] && Array.isArray(option['@type'])) {\n                          // Handle when array of types provided (e.g. SIO via rdflib)\n                          return option['@type'][0]\n                        } else {\n                          return option['@type']\n                        }\n                      }}\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          variant=\"outlined\"\n                          size='small'\n                          label=\"@type\"\n                          placeholder=\"@type\"\n                          className={classes.formInput}\n                        />\n                      )}\n                      // freeSolo={true}\n                      // includeInputInList={true}\n                      // ListboxProps={{\n                      //   className: classes.formInput,\n                      // }}\n                      // defaultValue={[top100Films[13]]}\n                      // multiple\n                    />\n                  </Grid>\n                }\n\n                {/* If property is a string : TextInput */}\n                {(typeof renderObject[property] === 'string' && property !== '@type') &&\n                  <>\n                    { !property.startsWith('@') && !Array.isArray(renderObject) &&\n                      <Grid item xs={4} md={3}>\n                        {/* Autocomplete for \"Data Properties\" properties */}\n                        <Autocomplete\n                          key={property + key}\n                          id={property}\n                          disabled={!editEnabled}\n                          className={classes.autocomplete}\n                          // value={ { ['rdfs:label']: renderObject[property]}}\n                          defaultValue={{'rdfs:label': property}}\n                          options={jsonld_properties.concat(state.autocompleteOntologyOptions)}\n                          onInputChange={handleAutocompleteOntologyOptions}\n                          onSelect={handleAutocompleteOntologyOptions}\n                          // ADD ONTOLOGY: fix how the entity id/label is retrieved (main outcome of the input)\n                          onChange={(event, newInputValue: any) => {\n                            if (newInputValue) {\n                              let newProperty = ''\n                              if (newInputValue['rdfs:label']) {\n                                // TODO: improve, make it more generic after normalizing JSON-LD?\n                                if (newInputValue['rdfs:label']['en']) {\n                                  // Handle CSVW label with lang\n                                  newProperty = newInputValue['rdfs:label']['en']\n                                } else {\n                                  newProperty = newInputValue['rdfs:label']\n                                }\n                              } else if(newInputValue['@id']) {\n                                // This is more semantically accurate but it imports the whole concept object\n                                // We could use the @id URI\n                                newProperty = newInputValue['@id']\n                              } else {\n                                newProperty = newInputValue\n                              }\n                              if (newProperty) renameKey(renderObject, property, newProperty);\n                              onChange(renderObject)\n                            }\n                          }}\n                          getOptionSelected={(option: any, selectedValue: any): any => {\n                            // Handle option label when provided with rdfs:label or direct\n                            try {\n                              if (option['rdfs:label']) {\n                                if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                                if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                              }\n                              if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] && selectedValue['http://www.w3.org/2000/01/rdf-schema#label']) {\n                                return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                              }\n                              if (option['@id']) {\n                                return option['@id'] === selectedValue['@id']\n                              }\n                              return option === selectedValue\n                            } catch (e) {\n                              return option === selectedValue\n                            }\n                          }}\n                          getOptionLabel={(option: any): any => {\n                            // Handle option label when provided with rdfs:label or direct\n                            try {\n                              if (option['rdfs:label']) {\n                                if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                                if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                              }\n                              if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                                return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                              }\n                              if (option['@id']) {\n                                return option['@id']\n                              }\n                              return option\n                            } catch (e) {\n                              return option\n                            }\n                          }}\n                          groupBy={(option: any): any => {\n                            if (option['@type'] && Array.isArray(option['@type'])) {\n                              // Handle when array of types provided (e.g. SIO via rdflib)\n                              return option['@type'][0]\n                            } else {\n                              return option['@type']\n                            }\n                          }}\n                          renderInput={params => (\n                            <TextField\n                              {...params}\n                              variant=\"filled\"\n                              size='small'\n                              label=\"Data Property\"\n                              placeholder=\"Data Property\"\n                              className={classes.formInput}\n                            />\n                          )}\n                        />\n                      </Grid>\n                    }\n                    {/* Full width for TextField on small screen 60% for bigger */}\n                    <Grid item xs={12} md={7}>\n                      {/* Only TextField for \"Data Properties\" value */}\n                      <TextField\n                        id={property}\n                        multiline\n                        label={property}\n                        placeholder={property}\n                        value={renderObject[property]}\n                        className={classes.fullWidth}\n                        variant=\"outlined\"\n                        onChange={handleTextFieldChange}\n                        size='small'\n                        InputProps={{\n                          className: classes.formInput\n                        }}\n                        required\n                        error={state.errorMessage.length > 0}\n                        helperText={state.errorMessage}\n                        // helperText=\"Incorrect entry.\"\n                        // errorText={state.errorMessage}\n                        InputLabelProps={{ required: false }}\n                        // All field are required but we hide the *\n                      />\n                    </Grid>\n                    {/* { Array.isArray(renderObject) && property !== '0' &&\n                      <Grid item>\n                        <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                          variant=\"contained\" \n                          size=\"small\"\n                          style={{ textTransform: 'none', marginLeft: theme.spacing(2), marginTop: theme.spacing(1) }}\n                          className={classes.editButtons} \n                          startIcon={<RemoveIcon />}\n                          color=\"primary\" >\n                            Delete\n                        </Button>\n                      </Grid>\n                    } */}\n                  </>\n                }\n\n                {/* If property is an object : RenderObjectForm recursion */}\n                {(typeof renderObject[property] === 'object' && renderObject[property]) &&\n                  // TODO: improve width handling within the Grid\n                  <Grid item xs={11}>\n                    <Card elevation={4} className={classes.paperPadding} \n                      // Arrays are using a different grey color\n                      style={{\n                        backgroundColor: (Array.isArray(renderObject[property]) ? \"#e8eaf6\" : \"white\")\n                      }}\n                      // style={ if ()\n                      //   backgroundColor: 'transparent',\n                      //   // boxShadow: 'none',\n                      // }\n                    >\n                      <Grid container>\n                        { Array.isArray(renderObject) &&\n                          <Grid item>\n                            <Chip style={{ marginBottom: theme.spacing(1), marginLeft: theme.spacing(1)}} \n                              label={property}\n                            />\n                          </Grid>\n                        }\n                        { !Array.isArray(renderObject) &&\n                          <Grid item xs={5} md={3}>\n                            {/* Autocomplete for \"Object Properties\" properties */}\n                            <Autocomplete\n                              key={property + key}\n                              id={property}\n                              disabled={!editEnabled}\n                              // value={ { ['rdfs:label']: renderObject[property]}}\n                              defaultValue={{'rdfs:label': property}}\n                              options={jsonld_properties.concat(state.autocompleteOntologyOptions)}\n                              onInputChange={handleAutocompleteOntologyOptions}\n                              onSelect={handleAutocompleteOntologyOptions}\n\n                              // ADD ONTOLOGY: fix how the entity id/label is retrieved (main outcome of the input) \n                              onChange={(event, newInputValue: any) => {\n                                if (newInputValue) {\n                                  let newProperty = ''\n                                  if (newInputValue['rdfs:label']) {\n                                    // TODO: improve, make it more generic after normalizing JSON-LD?\n                                    if (newInputValue['rdfs:label']['en']) {\n                                      // Handle CSVW label with lang\n                                      newProperty = newInputValue['rdfs:label']['en']\n                                    } else {\n                                      newProperty = newInputValue['rdfs:label']\n                                    }\n                                  } else if(newInputValue['@id']) {\n                                    // This is more semantically accurate but it imports the whole concept object\n                                    // We could use the @id URI\n                                    newProperty = newInputValue['@id']\n                                  } else {\n                                    newProperty = newInputValue\n                                  }\n                                  if (newProperty) renameKey(renderObject, property, newProperty);\n                                  onChange(renderObject)\n                                }\n                              }}\n                              getOptionSelected={(option: any, selectedValue: any): any => {\n                                // Handle option label when provided with rdfs:label or direct\n                                try {\n                                  if (option['rdfs:label']) {\n                                    if (typeof option['rdfs:label'] === 'string') return option['rdfs:label'] === selectedValue['rdfs:label']\n                                    if (option['rdfs:label']['en']) return option['rdfs:label']['en'] === selectedValue\n                                  }\n                                  if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                                    return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value'] === selectedValue['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                                  }\n                                  if (option['@id']) {\n                                    return option['@id'] === selectedValue['@id']\n                                  }\n                                  return option === selectedValue\n                                } catch (e) {\n                                  return option === selectedValue\n                                }\n                              }}\n                              getOptionLabel={(option: any): any => {\n                                // Handle option label when provided with rdfs:label or direct\n                                try {\n                                  if (option['rdfs:label']) {\n                                    if (typeof option['rdfs:label'] === 'string') return option['rdfs:label']\n                                    if (option['rdfs:label']['en']) return option['rdfs:label']['en']\n                                  }\n                                  if (option['http://www.w3.org/2000/01/rdf-schema#label'] && option['http://www.w3.org/2000/01/rdf-schema#label'][0] && option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']) {\n                                    return option['http://www.w3.org/2000/01/rdf-schema#label'][0]['@value']\n                                  }\n                                  if (option['@id']) {\n                                    return option['@id']\n                                  }\n                                  return option\n                                } catch (e) {\n                                  return option\n                                }\n                              }}\n\n                              groupBy={(option: any): any => {\n                                if (option['@type'] && Array.isArray(option['@type'])) {\n                                  // Handle when array of types provided (e.g. SIO via rdflib)\n                                  return option['@type'][0]\n                                } else {\n                                  return option['@type']\n                                }\n                              }}\n                              renderInput={params => (\n                                <TextField\n                                  {...params}\n                                  variant=\"filled\"\n                                  size='small'\n                                  label=\"Object Property\"\n                                  placeholder=\"Object Property\"\n                                  className={classes.formInput}\n                                />\n                              )}\n                              // freeSolo={true}\n                              // includeInputInList={true}\n                              // ListboxProps={{\n                              //   className: classes.formInput,\n                              // }}\n                              // defaultValue={[top100Films[13]]}\n                              // multiple\n                            />\n                          </Grid>\n                        }\n                        {/* Display question in Object (duplicate with before every object) */}\n                        {/* { fullJsonld['@wizardQuestions'] && fullJsonld['@wizardQuestions'][property] &&\n                          <Grid item>\n                            <Typography variant=\"body1\" style={{fontWeight: 900, textAlign: 'left', marginTop: theme.spacing(3), marginLeft: theme.spacing(1)}}>\n                              {fullJsonld['@wizardQuestions'][property]}\n                            </Typography>\n                          </Grid>\n                        } */}\n                        {/* { Array.isArray(renderObject) && property !== '0' &&\n                          <Grid item>\n                            <Button onClick={(subSelections: any) => handleRemoveEntry(property, subSelections)}\n                              variant=\"contained\" \n                              size=\"small\"\n                              style={{ textTransform: 'none', marginLeft: theme.spacing(2) }}\n                              className={classes.editButtons} \n                              startIcon={<RemoveIcon />}\n                              color=\"primary\" >\n                                Delete\n                            </Button>\n                          </Grid>\n                        } */}\n                        { Array.isArray(renderObject[property]) &&\n                          <Grid item>\n                            {/* Create Add entry button at the top of the list, if the property value is an array */}\n                            <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                              style={{marginTop: theme.spacing(3)}}\n                              variant=\"contained\" \n                              size=\"small\"\n                              className={classes.editButtons} \n                              startIcon={<AddIcon />}\n                              color=\"default\" >\n                                Add {property} entry\n                            </Button>\n                          </Grid>\n                        }\n                      </Grid>\n\n                      {/* Recursively call RenderObjectForm to render property values that are Objects */}\n                      <RenderObjectForm\n                        renderObject={renderObject[property]}\n                        onChange={(subSelections: any) => handleRecursiveChange(property, subSelections)}\n                        ontologyObject={ontologyObject}\n                        fullJsonld={fullJsonld}\n                        editEnabled={editEnabled}\n                        parentProperty={property}\n                        parentType={renderObject['@type']}\n                      />\n                      { Array.isArray(renderObject[property]) &&\n                        // Create Add entry button at the bottom of the list, if the property value is an array\n                        <Button onClick={(subSelections: any) => handleAddEntry(property, subSelections)}\n                          style={{marginTop: theme.spacing(1)}}\n                          variant=\"contained\" \n                          size=\"small\"\n                          className={classes.editButtons} \n                          startIcon={<AddIcon />}\n                          color=\"default\" >\n                            Add {property} entry\n                        </Button>\n                      }\n                    </Card>\n                  </Grid>\n                }\n              {/* </Box> */}\n              </Grid>\n            </>\n          }\n        </div>\n      ))}\n      {typeof renderObject === 'object' && !Array.isArray(renderObject) && editEnabled &&\n        // Buttons to add new properties or arrays for each object\n        <>\n          {/* <GridList cols={1}>\n            <GridListTile key={tile.img} cols={tile.cols || 1}>\n            <img src={tile.img} alt={tile.title} />\n            </GridListTile>\n            ))}\n            </GridList> */}\n          <Tooltip title={<Typography style={{textAlign: 'center'}}>Add a Data Property to the <code>{parentProperty}</code> object<br/>(new property with a string value)</Typography>}>\n            <IconButton onClick={(subSelections: any) => handleAddProperty('dataProperty', subSelections)}\n              style={{marginTop: theme.spacing(1)}}\n              className={classes.editButtons}\n              color=\"default\" >\n                <AddDataPropertyIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Typography style={{textAlign: 'center'}}>Add a Data Array to the <code>{parentProperty}</code> object<br/>(new property pointing to an array of strings)</Typography>}>\n            <IconButton onClick={(subSelections: any) => handleAddProperty('dataArray', subSelections)}\n              style={{marginTop: theme.spacing(1)}}\n              className={classes.editButtons} \n              color=\"default\" >\n                <AddDataArrayIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Typography style={{textAlign: 'center'}}>Add an Object Property to the <code>{parentProperty}</code> object<br/>(new property pointing to a new object)</Typography>}>\n            <IconButton onClick={(subSelections: any) => handleAddProperty('objectProperty', subSelections)}\n              style={{marginTop: theme.spacing(1)}}\n              className={classes.editButtons}\n              color=\"default\" >\n                <AddObjectPropertyIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title={<Typography style={{textAlign: 'center'}}>Add an Object Array to the <code>{parentProperty}</code> object<br/>(new property pointing to an array of objects)</Typography>}>\n            <IconButton onClick={(subSelections: any) => handleAddProperty('objectArray', subSelections)}\n              style={{marginTop: theme.spacing(1)}}\n              className={classes.editButtons} \n              color=\"default\" >\n                <AddObjectArrayIcon />\n            </IconButton>\n          </Tooltip>\n        </>\n      }\n      {/* { typeof renderObject === 'object' && !Array.isArray(renderObject) &&\n        // Buttons to add new properties or arrays for each object\n        <>\n          <Button onClick={(subSelections: any) => handleAddProperty('dataProperty', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.editButtons} \n            startIcon={<AddDataPropertyIcon />}\n            color=\"primary\" >\n              Data Property\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('dataArray', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.editButtons} \n            startIcon={<AddDataArrayIcon />}\n            color=\"primary\" >\n              Data array\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('objectProperty', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.editButtons} \n            startIcon={<AddObjectPropertyIcon />}\n            color=\"primary\" >\n              Object Property\n          </Button>\n          <Button onClick={(subSelections: any) => handleAddProperty('objectArray', subSelections)}\n            style={{marginTop: theme.spacing(1)}}\n            variant=\"contained\" \n            size=\"small\"\n            className={classes.editButtons} \n            startIcon={<AddObjectArrayIcon />}\n            color=\"primary\" >\n              Object array\n          </Button>\n        </>\n      } */}\n    </div>\n  )\n}\n\n// Default JSON-LD properties for Autocomplete\nconst jsonld_properties = [\n  {\n    '@id': '@value',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@id',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@type',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@graph',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@context',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@language',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@vocab',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@base',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@container',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@list',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@set',\n    '@type': 'JSON-LD properties'\n  },\n  {\n    '@id': '@reverse',\n    '@type': 'JSON-LD properties'\n  },\n]","import React from 'react';\nimport { useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Button, Card, InputLabel, Select, MenuItem, FormControl, Snackbar, TextField } from \"@material-ui/core\";\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport DownloadJsonldIcon from '@material-ui/icons/Description';\nimport UploadTriplestoreIcon from '@material-ui/icons/Share';\nimport axios from 'axios';\nimport $rdf from 'rdflib';\nimport { LoggedIn, LoggedOut, Value } from '@solid/react';\n// import * as jsonld from 'jsonld'\n// import {$rdf} from 'rdflib'\n// const jsonld = require('jsonld')\n\nimport JsonldUploader from \"../components/JsonldUploader\";\nimport CsvUploader from \"../components/CsvUploader\";\nimport RenderObjectForm from \"../components/RenderObjectForm\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    // color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  addEntryButton: {\n    textTransform: 'none',\n    marginLeft: theme.spacing(2),\n    // marginTop: theme.spacing(2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  autocomplete: {\n    marginRight: theme.spacing(2)\n  },\n  formInput: {\n    background: 'white',\n    width: '100%'\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\nexport default function JsonldWizard() {\n  const classes = useStyles();\n  const theme = useTheme();\n  // useLocation hook to get URL params\n  let location = useLocation();  \n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    wizard_jsonld: wizard_jsonld,\n    csvwColumnsArray: [],\n    jsonld_uri_provided: null,\n    ontology_loaded: 'Schema.org vocabulary',\n    ontology_jsonld: {},\n    edit_enabled: true,\n    ontoload_error_open: false,\n    ontoload_success_open: false,\n    sparql_endpoint: '',\n    sparql_username: '',\n    sparql_password: '',\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n  \n  // Original form and output:\n  // Questions: https://github.com/kodymoodley/fair-metadata-generator/blob/main/questions.csv\n  // Full output: https://github.com/kodymoodley/fair-metadata-html-page-generator/blob/main/testdata/inputdata/test.jsonld\n\n  React.useEffect(() => {\n    // Get the edit URL param if provided, and download ontology if @context changed\n    // Ontology is stored in state.ontology_jsonld \n    // and passed to renderObjectForm to resolve classes and properties\n    const params = new URLSearchParams(location.search + location.hash);\n    let jsonld_uri_provided = params.get('edit');\n    let editionEnabled = params.get('toysrus');\n    if (editionEnabled === 'closed') {\n      // Disable edit if toysrus=closed\n      updateState({ edit_enabled: false })\n    }\n    if (Object.keys(state.ontology_jsonld).length === 0) {\n      downloadOntology(ontologiesList[state.ontology_loaded])\n      // axios.get(jsonld_uri_provided)\n      //   .then(res => {\n      //     updateState({\n      //       wizard_jsonld: res.data,\n      //       jsonld_uri_provided: jsonld_uri_provided,\n      //     })\n      //     downloadOntology(res.data['@context'])\n      //   })\n    }\n    \n  }, [])\n\n  const ontologiesList: any = {\n    'Schema.org vocabulary': 'https://schema.org', \n    'SemanticScience Integrated Ontology': 'https://raw.githubusercontent.com/MaastrichtU-IDS/semanticscience/master/ontology/sio.owl',\n    'CSV on the Web': 'http://www.w3.org/ns/csvw', \n    'BioLink model': 'https://raw.githubusercontent.com/biolink/biolink-model/master/biolink-model.ttl',\n  }\n\n  const downloadOntology  = (contextUrl: string) => {\n    // Download the ontology JSON-LD \n    if (!contextUrl) {\n      // Handle when no @context provided, use schema.org by default\n      contextUrl = 'https://schema.org/'\n      // if (!state.wizard_jsonld['@context']) updateState({...state.wizard_jsonld, '@context': contextUrl})\n      console.log('No @context provided, using schema.org by default');\n    }\n    if (contextUrl.startsWith('https://schema.org') || contextUrl.startsWith('https://schema.org')) {\n      // Schema.org does not enable content-negociation \n      contextUrl = 'https://schema.org/version/latest/schemaorg-current-https.jsonld'\n    }\n    if (contextUrl.startsWith('http://')) {\n      // Resolving http:// ontologies is prevented by mixed active content (query http from https)\n      // We would need to deploy on our own DNS to use http (https is forced on github.io URLs)\n      contextUrl = contextUrl.replace('http://', 'https://')\n    }\n    // Try to download the ontology provided in @context URL as JSON-LD\n    // curl -iL -H 'Accept: application/ld+json' http://www.w3.org/ns/csvw\n    axios.defaults.headers.common['Accept'] = 'application/ld+json'\n    axios.get(contextUrl)\n      .then(res => {\n        // console.log('ontology downloaded!')\n        // console.log(res.data)\n        // if not json\n        if (typeof res.data !== 'object') {\n          // If not object, we try to parse\n          // const jsonLDList = await jsonld.fromRDF(result.quadList)\n          // TODO: support other types than just RDF/XML\n          toJSONLD(res.data, contextUrl)\n            .then((jsonld_rdf) => {\n              console.log('Ontology downloaded, and converted to JSON-LD RDF:');\n              console.log(jsonld_rdf);\n              updateState({\n                ontology_jsonld: {\n                  '@context': contextUrl,\n                  '@graph': jsonld_rdf\n                }\n              })\n              updateState({ontoload_success_open: true})\n              // jsonld.flatten(doc, (err: any, flattened: any) => {\n              //     console.log('flattened')\n              //     console.log(flattened)\n              //     // jsonld.frame(flattened, frame, (err: any, framed: any) => {\n              //     //     resolve(framed)\n              //     // })\n              // })\n            })\n        } else {\n          updateState({\n            ontology_jsonld: res.data\n          })\n          updateState({ontoload_success_open: true})\n        }\n      })\n      .catch(error => {\n        updateState({ontoload_error_open: true})\n        console.log(error)\n      })\n  }\n\n  const toJSONLD = (data: any, uri: any) => {\n    // Convert RDF to JSON-LD using rdflib\n    let rdf_format = 'application/rdf+xml';\n    if (uri.endsWith('.ttl')) rdf_format = 'text/turtle'\n    if (uri.endsWith('.nq')) rdf_format = 'application/n-quads'\n    // Or text/x-nquads\n    if (uri.endsWith('.nt')) rdf_format = 'application/n-triples'\n    if (uri.endsWith('.n3')) rdf_format = 'text/n3'\n    if (uri.endsWith('.trig')) rdf_format = 'application/trig'\n    return new Promise((resolve, reject) => {\n        let store = $rdf.graph()\n        let doc = $rdf.sym(uri);\n        $rdf.parse(data, store, uri, rdf_format)\n        // console.log(store)\n        $rdf.serialize(doc, store, uri, 'application/ld+json', (err: any, jsonldData: any) => {\n          return resolve(JSON.parse(jsonldData)\n            .sort((a: any, b: any) => {\n              if (a['@type'] && b['@type'] && Array.isArray(a['@type']) && Array.isArray(b['@type'])){\n                // Handle when array of types provided (e.g. SIO via rdflib)\n                return a['@type'][0] < b['@type'][0] ? 1 : -1\n              } else {\n                return a['@type'] < b['@type'] ? 1 : -1\n              }\n            })\n        )\n      })\n    })\n  }\n\n  const handleSelectOntology = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ontology_loaded: event.target.value})\n    downloadOntology(ontologiesList[event.target.value])\n  };\n\n  const handleSubmit  = (event: React.FormEvent) => {\n    // Trigger JSON-LD file download\n    event.preventDefault();\n    var element = document.createElement('a');\n    element.setAttribute('href', 'data:text/turtle;charset=utf-8,' + encodeURIComponent(JSON.stringify(state.wizard_jsonld, null, 4)));\n    element.setAttribute('download', 'metadata.json');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n    setState({...state, open: true})\n  }\n\n  // Close Snackbars\n  const closeOntoloadError = () => {\n    updateState({...state, ontoload_error_open: false})\n  };\n  const closeOntoloadSuccess = () => {\n    updateState({...state, ontoload_success_open: false})\n  };\n\n  // Handle TextField changes for SPARQL endpoint upload\n  const handleTextFieldChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({[event.target.id]: event.target.value})\n  }\n  const handleUploadToSparql  = (event: any) => {\n    // TODO: Use UpdateManager.update? Or iterate store and generate INSERT\n    // https://github.com/linkeddata/rdflib.js/issues/310\n    // var friends = store.each(me, FOAF('knows'), undefined)\n    // for (var i=0; i<friends.length;i++) {\n    //     friend = friends[i]\n    //     console.log(friend.uri) // the WebID of a friend\n    //     ...\n    // }\n    // https://github.com/MaastrichtU-IDS/translator-openpredict/blob/master/openpredict/rdf_utils.py#L58\n    // Then run POST query providing username and password\n    event.preventDefault();\n    console.log('Uploading RDF to: ' + state.sparql_endpoint);\n    console.log('With username: ' + state.sparql_username);\n    console.log('With password: ' + state.sparql_password);\n    console.log('WORK IN PROGRESS: triplestore upload currently not implemented');\n  }\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n        🧙‍♂️ JSON-LD editor 📝\n      </Typography>\n      {/* <Typography variant=\"body1\" color='initial' style={{ textAlign: 'center', marginBottom: theme.spacing(1)}}>\n        The JSON-LD editor you have been dreaming of\n      </Typography> */}\n\n      <LoggedIn>\n        <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n          Welcome <Value src=\"user.name\"/>!\n        </Typography>\n      </LoggedIn>\n      {/* <LoggedOut>\n        <p>Please login with SOLID</p>\n      </LoggedOut> */}\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n        Load and edit <a href=\"https://json-ld.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">JSON-LD</a> <a href=\"https://en.wikipedia.org/wiki/Resource_Description_Framework\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">RDF</a> files in a user-friendly web interface, with autocomplete based on the classes and properties from the loaded ontology\n      </Typography>\n\n      {/* <InputLabel id=\"select-ontology-label\" style={{ marginTop: theme.spacing(2) }}>\n        Loaded ontology\n      </InputLabel> */}\n      <Typography style={{ marginTop: theme.spacing(2), }}>\n        Loaded ontology:\n        <Select\n          id=\"select-ontology\"\n          value={state.ontology_loaded}\n          label=\"Loaded ontology\"\n          variant=\"outlined\"\n          style={{ backgroundColor: '#ffffff', marginLeft: theme.spacing(2)}}\n          onChange={handleSelectOntology}\n        >\n          { Object.keys(ontologiesList).map((label: any, key: number) => (\n            <MenuItem key={key} value={label}>{label}</MenuItem>\n          ))}\n        </Select>\n      </Typography>\n\n      {/* Display the JSON-LD file uploader (if no ?edit= URL param provided) */}\n      {!state.jsonld_uri_provided &&\n        <JsonldUploader renderObject={state.wizard_jsonld} \n          onChange={(wizard_jsonld: any) => {updateState({wizard_jsonld})}} />\n      }\n\n      {/* <CsvUploader \n        csvwColumnsArray={state.csvwColumnsArray}\n        onChange={(csvwColumnsArray: any) => {updateState({csvwColumnsArray})}} \n      /> */}\n\n      <Snackbar open={state.ontoload_error_open} onClose={closeOntoloadError} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\">\n          The ontology provided in @context could not be loaded from {state.wizard_jsonld['@context']}\n        </MuiAlert>\n      </Snackbar>\n      <Snackbar open={state.ontoload_success_open} onClose={closeOntoloadSuccess} autoHideDuration={10000}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"success\">\n          The ontology {state.ontology_loaded} has been loaded successfully, it will be used for classes and properties autocomplete\n        </MuiAlert>\n      </Snackbar>\n\n      <form onSubmit={handleSubmit}>\n        <FormControl className={classes.settingsForm}>\n\n          {/* First call of RenderObjectForm (the rest is handled recursively in this component) */}\n          <RenderObjectForm\n            renderObject={state.wizard_jsonld}\n            ontologyObject={state.ontology_jsonld}\n            onChange={(wizard_jsonld: any) => { updateState({wizard_jsonld})} }\n            fullJsonld={state.wizard_jsonld}\n            editEnabled={state.edit_enabled}\n            parentProperty='root'\n            parentType='root'\n          />\n\n          {/* Button to download the JSON-LD */}\n          <div style={{width: '100%', textAlign: 'center'}}>\n            <Button type=\"submit\" \n              variant=\"contained\" \n              className={classes.saveButton} \n              startIcon={<DownloadJsonldIcon />}\n              color=\"secondary\" >\n                Download metadata in JSON-LD format\n            </Button>\n            <Card className={classes.paperPadding}>\n              <Typography variant=\"h5\" style={{textAlign: 'center', marginBottom: theme.spacing(1)}}>\n                Publish this RDF to a triplestore (work in progress 🏗️)\n              </Typography>\n              <TextField\n                id='sparql_endpoint'\n                label='SPARQL endpoint URL'\n                placeholder='SPARQL endpoint URL'\n                value={state.sparql_endpoint}\n                className={classes.fullWidth}\n                variant=\"outlined\"\n                onChange={handleTextFieldChange}\n                size='small'\n                InputProps={{\n                  className: classes.formInput\n                }}\n              />\n              <TextField\n                id='sparql_username'\n                label='Username'\n                placeholder='Username'\n                value={state.sparql_username}\n                className={classes.fullWidth}\n                variant=\"outlined\"\n                onChange={handleTextFieldChange}\n                size='small'\n                InputProps={{\n                  className: classes.formInput\n                }}\n              />\n              <TextField\n                id='sparql_password'\n                type=\"password\"\n                label='Password'\n                placeholder='Password'\n                value={state.sparql_password}\n                className={classes.fullWidth}\n                variant=\"outlined\"\n                onChange={handleTextFieldChange}\n                size='small'\n                InputProps={{\n                  className: classes.formInput\n                }}\n              />\n              <Button\n                variant=\"contained\" \n                className={classes.saveButton} \n                onClick={handleUploadToSparql}\n                startIcon={<UploadTriplestoreIcon />}\n                color=\"secondary\" >\n                  Upload your JSON-LD to the triplestore\n              </Button>\n            </Card>\n          </div>\n        </FormControl>\n      </form>\n    </Container>\n  )\n}\n\n\nconst wizard_jsonld = {\n  \"@context\": \"https://schema.org\",\n  \"@wizardQuestions\": {\n    'name': 'Provide the name of this entity:',\n    'description': 'Give a short description of the content:',\n    'creator': 'Provide the details of the person who created, or initiated, the creation of this work:',\n    'contributor': 'Other persons who contributed to, or co-authored, the dataset:',\n    'publisher': 'Person, or organization, who published this work:',\n    'inLanguage': 'What language is used in the description of this dataset? Use ISO 2 language code e.g. EN for English',\n    'version': 'What is the version number for this dataset? e.g. 1.1.1 or v1.2',\n    'license': 'Link to the full text of the terms of use (license) for this dataset:',\n    'encodingFormat': 'What is the file format of this data?',\n    'url': 'Link to the website or homepage:',\n    'temporalCoverage': 'What is the creation or publishing date range for the documents or contents of this dataset? Use https://en.wikipedia.org/wiki/ISO_8601#Time_intervals format - e.g. 2007-03-01/2008-05-11:',\n    'keywords': 'Provide keywords describing the content in this dataset:',\n    'distribution': 'Supply a direct download link for this dataset:',\n    'contentSize': 'How large is the download file size e.g. 128KB, 54MB, 1.5GB?',\n    'isBasedOn': 'Was this dataset generated with the aid of or using a piece of software?',\n    'applicationCategory': 'Indicate type of software e.g. Python script or Java GUI application:',\n    'citation': 'Is there an academic publication which describes or centrally makes use of this dataset?',\n    'datePublished': 'On what date was the dataset published? YYYY-MM-DD',\n    'dateCreated': 'On what date was the dataset created? YYYY-MM-DD',\n    'affiliation': 'This person is affiliated to or employed by:',\n    'logo': 'Link to an image depicting the logo of this organisation:',\n    'image': 'Provide a link (URL) to a profile photo of the author of the dataset:',\n    'sameAs': 'Provide a Digital Object Identifier (DOI) for this publication:',\n    'frequency': 'How often does a new version get published for this dataset? e.g. daily, weekly, monthly',\n    // 'encodingFormat': 'What is the download file format e.g. Zip archive, CSV file, JSON file etc:',\n  },\n  \"@type\": \"Dataset\",\n  \"name\": \"ECJ case law text similarity analysis\",\n  \"description\": \"results from a study to analyse how closely the textual similarity of ECJ cases resembles the citation network of the cases.\",\n  \"version\": \"v2.0\",\n  \"url\": \"https://doi.org/10.5281/zenodo.4228652\",\n  \"license\": \"https://www.gnu.org/licenses/agpl-3.0.txt\",\n  \"encodingFormat\": \"CSV\",\n  \"temporalCoverage\": \"2019-09-14/2020-07-01\",\n  \"dateCreated\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2019-09-14\"\n  },\n  \"datePublished\": {\n      \"@type\": \"Date\",\n      \"@value\": \"2020-07-01\"\n  },\n  \"distribution\": {\n      \"@type\": \"DataDownload\",\n      \"contentUrl\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://zenodo.org/record/4228652/files/docona_cjeu_results_2018_v2_html.zip?download=1\"\n      },\n      \"encodingFormat\": \"application/zip\",\n      \"contentSize\": \"1.1MB\"\n  },\n  \"inLanguage\": {\n      \"@type\": \"Language\",\n      \"name\": \"EN\",\n      \"alternateName\": \"EN\"\n  },\n  \"keywords\": [\n      \"case law\",\n      \"court decisions\",\n      \"text similarity\",\n      \"network analysis\",\n  ],\n  \"creator\": {\n      \"@type\": \"Person\",\n      \"name\": \"concat @givenName @familyName\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"contributor\": [\n      {\n          \"@type\": \"Person\",\n          \"givenName\": \"Pedro\",\n          \"familyName\": \"Hernandez Serrano\",\n          \"jobTitle\": \"Data Scientist\",\n          \"email\": \"p.hernandezserrano@maastrichtuniversity.nl\",\n          \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/p.hernandezserrano/p.hernandezserrano_PP%20%287%20of%2013%29.jpg?itok=IUdreoIw&timestamp=1610395201\",\n          \"affiliation\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Institute of Data Science\",\n              \"url\": {\n                  \"@type\": \"URL\",\n                  \"@value\": \"https://www.maastrichtuniversity.nl/research/institute-data-science\"\n              },\n              \"logo\": {\n                  \"@type\": \"ImageObject\",\n                  \"contentUrl\": \"https://avatars.githubusercontent.com/u/36262526?s=280&v=4\"\n              }\n          }\n      }\n  ],\n  \"publisher\": {\n      \"@type\": \"Person\",\n      \"name\": \"Kody Moodley\",\n      \"givenName\": \"Kody\",\n      \"familyName\": \"Moodley\",\n      \"jobTitle\": \"Postdoctoral researcher\",\n      \"image\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/text_with_image_mobile_portrait/public/profile/kody.moodley/kody.moodley_photo_kmoodley.jpg?itok=bN7b8s_-&timestamp=1583505301\",\n      \"email\": \"kody.moodley@maastrichtuniversity.nl\",\n      \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Maastricht Law & Tech Lab\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.maastrichtuniversity.nl/about-um/faculties/law/research/law-and-tech-lab\"\n          },\n          \"logo\": {\n              \"@type\": \"ImageObject\",\n              \"contentUrl\": \"https://www.maastrichtuniversity.nl/sites/default/files/styles/page_photo/public/compacte20versie20law20and20tech20lab.jpg?itok=7lm6PEQF\"\n          }\n      }\n  },\n  \"isBasedOn\": [\n      {\n          \"@type\": \"SoftwareApplication\",\n          \"name\": \"docona\",\n          \"description\": \"DoConA (Document Content and Citation Analysis Pipeline) is an open source, configurable and extensible Python tool to analyse the level of agreement between the citation network of a set of textual documents and the textual similarity of these documents.\",\n          \"applicationCategory\": \"Python script\",\n          \"operatingSystem\": \"cross-platform\",\n          \"version\": \"1.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://github.com/MaastrichtU-IDS/docona\"\n          }\n      },\n      {\n          \"@type\": \"CreativeWork\",\n          \"name\": \"ECJ case law and citation network\",\n          \"description\": \"Citation network and full text documents of each judgement by the Court of Justice of the European Union that was published publicly on the EUR-LEX website (https://eur-lex.europa.eu/homepage.html) up until December 2018\",\n          \"version\": \"2.0\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://doi.org/10.5281/zenodo.3926736\"\n          }\n      }\n  ],\n  \"citation\": {\n      \"@type\": \"CreativeWork\",\n      \"name\": \"Similarity and Relevance of Court Decisions: A Computational Study on CJEU Cases\",\n      \"creator\": [\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Kody Moodley\"\n          },\n          {\n              \"@type\": \"Person\",\n              \"name\": \"Michel Dumontier\"\n          }\n      ],\n      \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"IOS press\",\n          \"url\": {\n              \"@type\": \"URL\",\n              \"@value\": \"https://www.iospress.nl\"\n          }\n      },\n      \"datePublished\": {\n          \"@type\": \"Date\",\n          \"@value\": \"2019-12-10\"\n      },\n      \"sameAs\": {\n          \"@type\": \"URL\",\n          \"@value\": \"https://doi.org/10.3233/FAIA190307\"\n      }\n  }\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      <Typography variant=\"body1\" style={{textAlign: 'center', marginBottom: '20px'}}>\n        A wizard to generate Schema.org metadata for datasets in RDF JSON-LD format.\n      </Typography>\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/vemonet/json-ld-editor-react/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/vemonet/json-ld-editor-react/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport { Text, View, Platform } from \"react-native\";\nimport { Router, Route, Link } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport JsonldWizard from \"./src/pages/JsonldWizard\";\nimport About from \"./src/pages/About\";\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    primary: { light: '#6ab7ff', main: blue[600], dark: '#005cb2' },\n    secondary: { light: '#ff7043', main: '#ff5722', dark: '#087f23' },\n    // Green:\n    // secondary: { light: '#4caf50', main: '#087f23', dark: '#00600f' },\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500,\n    \"fontSize\": 11\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/json-ld-editor-react/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        {/* <Route exact path=\"/\" component={ProjectsDashboard} /> */}\n        <Route exact path=\"/\" component={JsonldWizard} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/json-ld-editor-react/expo-service-worker.js', { scope: '/json-ld-editor-react/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #757575;\\n  /* background-color: #78909c; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}